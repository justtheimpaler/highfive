# Releasing and Publishing to Maven Central

This guide shows how to release the project artifacts to Maven Central Repository.

## Release in One Go

### Verify the code is ready for releasing

Check:

- The version is up to date. Use `mvn versions:set` (described below) to fix.
- The build is working. Use `mvn clean install` to check.
- All files are commited to the repository. Use `git status` to check.

### Verify the build is ready

Run:

```bash
export GPG_TTY=$(tty) && mvn -P release clean install
```

### Release

Combine the whole Release & Publishing process into the single command line, shown below:

```bash
mvn release:clean && mvn -B release:prepare && export GPG_TTY=$(tty) && mvn -P release release:perform && mvn release:clean && git pull
```

Note: When using the Nexus Staging Maven Plugin, it may fail because of "504 Gateway Time-out" errors thrown by Maven Central's server. This 
is usually due to slowness of the server. When this happens, the release process is unfinished. To finish it type:

```bash
git checkout tags/<version>
export GPG_TTY=$(tty) && mvn -P release clean deploy
mvn release:clean && git pull && git checkout <my-working-branch>
```

## Change the project version

If you need a different project version for the next release (different from the default one) you can change it easily -- for the project
and all its submodules at once -- (for example to 1.3.0-SNAPSHOT) by typing:

```bash
mvn versions:set -DnewVersion=1.3.0-SNAPSHOT versions:commit
```
 