<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.nocrala</groupId>
  <artifactId>highfive</artifactId>
  <version>1.2.3</version>
  <packaging>jar</packaging>

  <name>HighFive - Database Data Copier &amp; Comparator</name>

  <description>
    HighFive copies and compare data between databases. These databases can be of the same
    or different brand, edition, or version.

    When copying the data, the tables and columns must match. The column data types may not match
    exactly, but must be compatible for read and write purposes.

    When comparing, it hashes the data in one database to get baseline hashes. It can then hash
    another database to compare the new hashes and decide if they fully match or not.

    It currently supports the Oracle, DB2 LUW, PostgreSQL, SQL Server, MySQL, and MariaDB databases.
  </description>

  <url>https://bitbucket.org/impalerthe/highfive/src/master/</url>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>valarcon</id>
      <name>Vladimir Alarcon</name>
      <email>vladimiralarcon@yahoo.com</email>
      <organization>Empirical Inc.</organization>
      <organizationUrl />
      <roles>
        <role>Programmer</role>
      </roles>
      <timezone>America/New York</timezone>
    </developer>
  </developers>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>8</maven.compiler.source>
    <maven.compiler.target>8</maven.compiler.target>
    <timestamp>${maven.build.timestamp}</timestamp>
    <maven.build.timestamp.format>yyyyMMdd-HHmmss</maven.build.timestamp.format>
    <log4j.version>2.24.0</log4j.version>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
    </dependency>

  </dependencies>

  <scm>
    <developerConnection>scm:git:ssh://git@bitbucket.org/impalerthe/highfive.git</developerConnection>
    <url>https://bitbucket.org/impalerthe/highfive.git</url>
    <tag>highfive-1.2.3</tag>
  </scm>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
    </repository>
  </distributionManagement>

  <build>

    <plugins>

      <!-- Assemble jar with dependencies -->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.6.0</version><!--$NO-MVN-MAN-VER$-->
        <configuration>
          <archive>
            <manifest>
              <mainClass>highfive.HighFive</mainClass>
            </manifest>
          </archive>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <finalName>highfive-${project.version}</finalName>
          <appendAssemblyId>false</appendAssemblyId>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>    

      <!-- Embeds the project build information -->

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>templating-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <id>filtering-java-templates</id>
            <goals>
              <goal>filter-sources</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>

    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
          <configuration>
            <compilerArgs>
              <arg>-Xlint</arg>
            </compilerArgs>
          </configuration>
        </plugin>

      </plugins>
    </pluginManagement>

  </build>

  <profiles>

    <profile>
      <id>release</id>
      <build>

        <plugins>
        
        

          <!-- Set the release tag to the version number only, and single versioning -->

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-release-plugin</artifactId>
            <version>3.0.0-M1</version><!--$NO-MVN-MAN-VER$-->
            <configuration>
              <tagNameFormat>@{project.version}</tagNameFormat>
              <autoVersionSubmodules>true</autoVersionSubmodules>
            </configuration>
          </plugin>

          <!-- Produce sources package - For Maven Central publishing -->

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
 
          <!-- Produce the Javadocs package - For Maven Central publishing -->

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- Sign components using GPG - For Maven Central publishing -->

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.5</version>
            <executions>
              <execution>
                <id>sign-artifacts-passphrase</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- Replaces "deploy" step with full Nexus Deploy + Close + Release on Maven Central -->

          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.7</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
            </configuration>
          </plugin>

        </plugins>

      </build>
    </profile>
  </profiles>

</project>
